// TODO: should refactor by the data format and checksum formula

#include "teco-ac.h"

#include "IRremoteESP8266.h"
#include "IRsend.h"


void TecoAC::Send() {
  ir_->sendGeneric(
    kHdrMark, kHdrSpace,
    kBitMark, kOneSpace,
    kBitMark, kZeroSpace,
    kBitMark, kDefaultMessageGap,
    data_.data(), data_.size(),
    kFreq, true, kNoRepeat, kDutyDefault
  );
}

void TecoAC::SetPower(int degree) {
  switch (degree) {
    case 25:
      data_ = {0x30, 0xFF, 0x3F, 0x3F, 0x1F, 0x19, 0x3F, 0x20, 0x83};
      break;
    case 26:
    default:
      data_ = {0x30, 0xFF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x20, 0x80};
      break;
    case 27:
      data_ = {0x30, 0xFF, 0x3F, 0x3F, 0x1F, 0x1B, 0x3F, 0x20, 0x81};
      break;
    case 28:
      data_ = {0x30, 0xFF, 0x3F, 0x3F, 0x1F, 0x1C, 0x3F, 0x20, 0x86};
      break;
  }
}

void TecoAC::SetTemperature(int degree) {
  switch (degree) {
    case 25:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x19, 0x3F, 0x20, 0x87};
      break;
    case 26:
    default:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x20, 0x84};
      break;
    case 27:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1B, 0x3F, 0x20, 0x85};
      break;
    case 28:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1C, 0x3F, 0x20, 0x82};
      break;
  }
}

void TecoAC::SetFan(FanType type) {
  switch (type) {
    case TecoAC::FAN_LOW:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x3A, 0x3F, 0x20, 0x86};
      break;
    case TecoAC::FAN_MIDIUM:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x5A, 0x3F, 0x20, 0x80};
      break;
    case TecoAC::FAN_HIGH:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x7A, 0x3F, 0x20, 0x82};
      break;
    case TecoAC::FAN_AUTO:
    default:
      data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x20, 0x84};
      break;
  }
}

void TecoAC::SetSwing(SwingType type) {
  switch (type) {
  case TecoAC::SWING_HIGHEST:
    data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x20, 0x84};
    break;
  case TecoAC::SWING_HIGH:
    data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x40, 0x82};
    break;
  case TecoAC::SWING_MIDDLE:
    data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x60, 0x80};
    break;
  case TecoAC::SWING_LOW:
    data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0x80, 0x8E};
    break;
  case TecoAC::SWING_LOWEST:
    data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0xA0, 0x8C};
    break;
  case TecoAC::SWING_AUTO:
  default:
    data_ = {0x30, 0xBF, 0x3F, 0x3F, 0x1F, 0x1A, 0x3F, 0xE0, 0x88};
    break;
  }
}
